# to run the test type: python3 -m doctest -v ./tests/0-add_integer.txt

# first import the function
>>> add_integer = __import__("0-add_integer").add_integer

PASSING TESTS:

Test signed and unsigned integers and floats:
	>>> print(add_integer(2, 1))
	3
	>>> print(add_integer(2, -1))
	1
	>>> print(add_integer(3, 1.5))
	4
	>>> print(add_integer(-2.3, -3.2))
	-5

Test default arg b=98 value:
     >>> print(add_integer(6))
     104


FAIL CASES:

Test no args:
     >>> print(add_integer(None))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> print(add_integer(None, None))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

Test extra args:
     >>> print(add_integer(1, 2, "3", []))
     Traceback (most recent call last):
     ...
     TypeError: add_integer() takes from 1 to 2 positional arguments but 4 were given

Test other data types:
     >>> print(add_integer([1, 4]))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> print(add_integer(0, [1, 2, 3]))
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer
